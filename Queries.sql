CREATE DATABASE BLINKITPROJECT;
USE BLINKITPROJECT;

# Data Cleaning
UPDATE blinkit_data
SET Item_Fat_Content = 
    CASE 
        WHEN Item_Fat_Content IN ('LF', 'low fat') THEN 'Low Fat'
        WHEN Item_Fat_Content = 'reg' THEN 'Regular'
        ELSE Item_Fat_Content
    END;
    
   -- Q1: Find the Total Sales (overall revenue generated from all items sold).
    SELECT CONCAT(CAST(SUM(SALES)/1000000.0 AS DECIMAL(10,2))," M") AS TOTAL_SALES
    FROM BLINKIT_DATA;
    
   -- Q2: Find the Average Sales (average revenue per item sold). 
    SELECT CAST(AVG(SALES) AS DECIMAL(10,1))AS AVERAGE_SALES 
    FROM BLINKIT_DATA;

-- Q3: Find the Number of Items Sold (total count of all items sold).
SELECT COUNT(*) AS NO_OF_ITEMS 
FROM BLINKIT_DATA;

-- Q4: Find the Average Rating (average customer rating for all items).
SELECT CAST(AVG(RATING) AS DECIMAL(10,1)) AS AVERAGE_RATING FROM BLINKIT_DATA;

-- Q5: Analyze Total Sales by Fat Content.
SELECT ITEM_FAT_CONTENT,CONCAT(CAST(SUM(SALES)/1000000 AS DECIMAL(10,2))," M")AS TOTAL_SALES
 FROM BLINKIT_DATA
 GROUP BY ITEM_FAT_CONTENT
 ORDER BY TOTAL_SALES DESC;
 
 -- Q6: Analyze Total Sales by Item Type.
 SELECT ITEM_TYPE,CAST(SUM(SALES) AS DECIMAL(10,2)) AS TOTAL_SALES
 FROM BLINKIT_DATA
 GROUP BY 1
 ORDER BY TOTAL_SALES  DESC;
 
 -- Q7: Analyze Fat Content Contribution by Outlet for Total Sales.
SELECT OUTLET_LOCATION_TYPE,
CAST(SUM(CASE WHEN ITEM_FAT_CONTENT="LOW FAT" THEN SALES ELSE 0 END) AS DECIMAL(10,2)) AS LOW_FAT,
CAST(SUM(CASE WHEN ITEM_FAT_CONTENT="REGULAR" THEN SALES ELSE 0 END) AS DECIMAL(10,2)) AS REGULAR
FROM BLINKIT_DATA
GROUP BY 1
ORDER BY 1;

-- Q8: Analyze Total Sales by Outlet Establishment Year.
SELECT OUTLET_ESTABLISHMENT_YEAR,CAST(SUM(SALES) AS DECIMAL(10,2))AS TOTAL_SALES
 FROM BLINKIT_DATA
GROUP BY 1
ORDER BY 1;

-- Q9: Analyze Percentage of Sales by Outlet Size.
SELECT  OUTLET_SIZE,CAST(SUM(SALES) AS DECIMAL(10,2)) AS TOTAL_SALES,
CAST(SUM(SALES)*100.0/(SELECT SUM(SALES) FROM BLINKIT_DATA) AS DECIMAL (10,2)) AS SALES_PERCENTAGE
 FROM BLINKIT_DATA
 GROUP BY OUTLET_SIZE;
 
 -- Q10: Analyze Sales by Outlet Location.
 SELECT OUTLET_LOCATION_TYPE,CAST(SUM(SALES) AS DECIMAL(10,2))AS TOTAL_SALES 
 FROM BLINKIT_DATA 
 GROUP BY 1
 ORDER BY TOTAL_SALES DESC;
 
 -- Q11: Analyze All Key Metrics by Outlet Type.
 SELECT OUTLET_TYPE,
 CAST(SUM(SALES)AS DECIMAL(10,2)) AS TOTAL_SALES,
 CAST(AVG(SALES)AS DECIMAL(10,1)) AS AVERAGE_SALES,
 COUNT(*) AS NO_OF_ITEMS,
 CAST(AVG(RATING)AS DECIMAL(10,1)) AS AVERAGE_RATING,
 CAST(AVG(ITEM_VISIBILITY)AS DECIMAL(10,2)) AS AVERAGE_ITEM_VISIBILITY
 FROM BLINKIT_DATA
 GROUP BY 1
 ORDER BY TOTAL_SALES DESC;
 
 
 
 
 
 
 

















    
    
    
    
    
    
    